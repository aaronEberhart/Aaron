{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"str",
				"string?"
			],
			[
				"axio",
				"axiomAnnotations"
			],
			[
				"to",
				"toDLString"
			],
			[
				"ontolo",
				"ontologyIRI"
			],
			[
				"ont",
				"ontologyFile"
			],
			[
				"annotat",
				"annotationValue"
			],
			[
				"ann",
				"annotationRole"
			],
			[
				"emp",
				"emptyOntology"
			]
		]
	},
	"buffers":
	[
		{
			"file": "cv.html",
			"settings":
			{
				"buffer_size": 4874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 2973,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 8061,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "papers.html",
			"settings":
			{
				"buffer_size": 3768,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "projects.html",
			"settings":
			{
				"buffer_size": 3018,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Build: New Build System"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/aaron/git/me/docs"
	],
	"file_history":
	[
		"/home/aaron/git/me/docs/index.html",
		"/home/aaron/Dropbox/FOWL/src/ontology/facts.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/components.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/functions.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/regexes.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/normalize.clj",
		"/home/aaron/Dropbox/FOWL/src/unReasoner/preprocessing.clj",
		"/home/aaron/Dropbox/FOWL/test/testing.clj",
		"/home/aaron/git/me/docs/style.css",
		"/home/aaron/Dropbox/FOWL/src/ontology/axioms.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/expressions.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/fileIO.clj",
		"/home/aaron/Dropbox/FOWL/src/main.clj",
		"/home/aaron/Dropbox/FOWL/src/util/msc.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/IO.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/file.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/annotations.clj",
		"/home/aaron/Dropbox/FOWL/.lein-failures",
		"/home/aaron/Dropbox/FOWL/project.clj",
		"/home/aaron/Dropbox/FOWL/src/ontology/SWRL.clj",
		"/home/aaron/Dropbox/FOWL/src/unReasoner/model.clj",
		"/home/aaron/Dropbox/FOWL/src/unReasoner/consistency.clj",
		"/home/aaron/Dropbox/FOWL/src/unReasoner/tableau.clj",
		"/home/aaron/Dropbox/FOWL/project.sublime-project"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"}(\\w)",
			"}#",
			"}.",
			"\n \"Will attempt to infer a valid fact based on the arguments supplied. If the first argument is string, it will create a class fact when there are 2, role fact when 3.\"\n [& args]\n (let [args (apply extractParams args) ann (if (set? (first args)) (first args) nil) args (if (nil? ann) args (rest args))]\n  (cond\n   (= 2 (count args)) (apply fs/classFact (cons ann args))\n   (= :literal (:type (last args))) (apply fs/dataRoleFact (cons ann args))\n   (or (= :role (:type (first args))) (string? (first args))) (apply fs/roleFact (cons ann args))\n   \n   (= :annotationRole (:type (first args))) (apply ax/annotationFact (cons ann args))\n   :else (throw+ {:type ::notFact :annotations ann :args args}))))\n",
			"litera",
			"msc",
			"getType",
			"(re-matches ",
			"           [",
			"(ex/not",
			"getClassDSNF",
			"=Roles",
			"=Classes",
			"=Roles",
			"updateForChangedPrefix",
			"prn",
			"annotations]",
			"Name",
			"prn",
			"acc",
			"dataUniversal",
			"dataExistential",
			"=role",
			"existential",
			"universal",
			"=dataRole",
			"dataExistential",
			"dataUniversal",
			"dataExistential",
			"=dataRole",
			"=role",
			"existential",
			"universal",
			"existential",
			"=dataRole",
			"=role",
			"prn",
			"makeO",
			"prn",
			"stringLi",
			"prefix iri",
			"prefix iri namespace",
			"iri namespace prefix",
			"prefix iri namespace",
			"iri namespace prefix",
			"[iri namespace prefix]",
			"assignPrefix",
			");(",
			"stuff",
			")))\n",
			"-getStuffInMap",
			"-getStuffByKeyInMap",
			"smushPrefix",
			"{ axiomAnnotations }",
			"[ axiomAnnotations ]",
			"[ ontologyA",
			"'(' axiomAnnotations ",
			"dr)",
			"dr]",
			"dr ",
			"[nat",
			"stringLiteralNoLanguage",
			"iarg",
			"notDataRole",
			"parseIRI",
			"\"",
			"\"Ob",
			"class",
			" class ",
			" name ",
			"r/",
			"Rule",
			"decla",
			"datatypeRestriction",
			") extractParams)",
			"(comp (partial apply ",
			"oio/i",
			":toLi",
			"toIndividual",
			":fromA",
			"(prn",
			"(co/dataRange dataRange)",
			"(ex/dataRole dataRole)",
			"(ex/role role)",
			"(ann/axiomAnnotations annotations)",
			"(axiomAnnotations annotations)",
			" prefixes",
			"prefixes",
			"ax/",
			"FromOntology",
			"ToOntology",
			"smushPrefix",
			")\n",
			"\t",
			"sublime find replace",
			"partial",
			"partialRole",
			"contains? ",
			"classna",
			"body",
			"(:",
			"Definition",
			"dataTypeDefinition",
			"dataTy",
			"dataRoleRa",
			"dataRoleD",
			"antecedentR",
			"antece"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"}\n()",
			"}\n#",
			"}\n.",
			"getFunction",
			"=roles",
			"=classes",
			"=roles",
			"dataAll",
			"dataExists",
			"=exists",
			"exists",
			"all",
			"=dataExists",
			"dataExists",
			"dataAll",
			"dataExists",
			"=dataExists",
			"=exists",
			"exists",
			"all",
			"exists",
			"=dataExists",
			"=exists",
			"=existential",
			"=exists",
			"prefix name",
			"prefix name namespace",
			"prefix iri namespace",
			"[prefix iri namespace]",
			"-getStuffInNestedMap",
			"-getStuffInMap",
			"assignPrefix",
			"axiomAnnotations",
			"{ axiomAnnotations }",
			"'(' [ axiomAnnotations ] ",
			"'(' [ axiomAnnotations ]",
			"dataRole)",
			"dataRole]",
			"dataRole ",
			"[naturalNumber",
			"",
			"dataRange",
			"dataRole",
			"role",
			"annotations",
			"",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "cv.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4874,
						"regions":
						{
						},
						"selection":
						[
							[
								1825,
								1825
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2973,
						"regions":
						{
						},
						"selection":
						[
							[
								1967,
								1967
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8061,
						"regions":
						{
						},
						"selection":
						[
							[
								957,
								957
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "papers.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3768,
						"regions":
						{
						},
						"selection":
						[
							[
								1882,
								1882
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "projects.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3018,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
